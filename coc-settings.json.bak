{
  "languageserver": {
    "c": {
      "command": "clangd",
      "rootPatterns": ["CMakeLists.txt", "compile_flags.txt", "compile_commands.json"],
      "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"]      
    },
    "python": {
      "command": "python3",
      "args": ["-mpyls", "-vv", "--log-file", "/tmp/lsp_python.log"],
      "rootPatterns": [".git", ".env", ".venv"],
      "filetypes": ["python"],
      "settings": {}
    },
    "racket": {
      "command": "racket",
      "args": ["--lib", "racket-langserver"],
      "rootPatterns": [".travis.yml", "info.rkt"],
      "filetypes": ["racket"]
    },
    "rust": {
      "command": "rust-analyzer",
      "filetypes": ["rust"],
      "rootPatterns": ["Cargo.toml"]
    },
    "r": {
      "command": "R",
      "args": ["--slave", "-e", "languageserver::run()"],
      "rootPatterns": [".Rproj"],
      "filetypes": ["r"]
    },
    "julia": {
      "command": "julia",
      "args" : ["--startup-file=no", "--history-file=no", "-e", "using LanguageServer; using Pkg; import StaticLint; import SymbolServer; env_path = dirname(Pkg.Types.Context().env.project_file); server = LanguageServer.LanguageServerInstance(stdin, stdout, env_path, \"\"); server.runlinter = true; run(server);" ],
      "rootPatterns": ["Project.toml"],
      "filetypes": ["julia"]
    },
    "sql": {
      "command": "sql-language-server",
      "args" : ["up", "--method", "stdio"],
      "filetypes": ["sql", "mysql"]
    },
    "tex": {
      "command": "digestif",
      "filetypes": ["tex", "plaintex", "context"]
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"]
    }
  }
}
